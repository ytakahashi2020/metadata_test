import type { OperatorFilterer, OperatorFiltererInterface } from "../OperatorFilterer";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
declare type OperatorFiltererConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class OperatorFilterer__factory extends ContractFactory {
    constructor(...args: OperatorFiltererConstructorParams);
    deploy(subscriptionOrRegistrantToCopy: string, subscribe: boolean, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<OperatorFilterer>;
    getDeployTransaction(subscriptionOrRegistrantToCopy: string, subscribe: boolean, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): OperatorFilterer;
    connect(signer: Signer): OperatorFilterer__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060405161020a38038061020a83398101604081905261002f91610172565b6daaeb6d7670e522a718067333cd4e3b1561016b5780156100bd57604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156100a057600080fd5b505af11580156100b4573d6000803e3d6000fd5b5050505061016b565b6001600160a01b0382161561010c5760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af290390604401610086565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b505050505b50506101bd565b6000806040838503121561018557600080fd5b82516001600160a01b038116811461019c57600080fd5b602084015190925080151581146101b257600080fd5b809150509250929050565b603f806101cb6000396000f3fe6080604052600080fdfea26469706673582212208b8c61d1184aa16cd4a26a834d7df421763842c51b36fd41715b1caba6596ff264736f6c634300080c0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
    })[];
    static createInterface(): OperatorFiltererInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OperatorFilterer;
}
export {};
//# sourceMappingURL=OperatorFilterer__factory.d.ts.map